

EL
  
  	1. EL 的  . 或  [] 运算符
  	
  	2. El 中的隐藏对象
  		没有指定 EL 范围      page request session application
  	
  	3. EL 可以进行自动的类型转换 

  	4. 隐含对象之与范围相关的：pageScope requestScope sessionScope applicationScope
  	
  	5.与输入有关的隐含对象：param paramValue
  	
  	6. 其他隐含对象  pageContext 等 ( cookie,header,initParam 只需要了解 )
  	
  	7. EL 的关系运算符 
  		empty 可以作用于一个集合，若该集合不存在或集合中没有元素，其结果都为 true
  	
  	
  	与范围有关的：(Attribute)
  		applicationScope sessionScope requestScope pageScope
  
  		
  	与输入有关的(param)
  		param  paramValues
  	 
  		
  	其他
  		cookie header headerValues initParam
  		pagecontext
  		
  	
  	coolie: ${coolie.xxx} ： cookie 的参数信息
  	
  	header: ${header[xxx]} ：header 请求头中的参数信息
  	
  	initParam: ${initParam[xxx]} ：xml 文件中的  context-param 
  	
  	
  	---------------------------------------------------------------------------------
  	
  	jstl
  	
  	定义标签库
	  	<!-- 描述 TDL 文件 -->
	  	<description>MyTag 1.0 core library</description>
	  	<display-name>MyTag core</display-name>
	  	<tlib-version>1.0</tlib-version>
	  
	 	 <!-- 建议在 JSP 页面上使用的标签前缀 -->
	 	 <short-name>atmytag</short-name>
	 	 <!-- 作为 tld 文件的 id，用来唯一标识当前的 TLD 文件，多个 tld 文件的 URL 不能重复 通过 jsp页面的 taglib 标签的 uri 属性来引用 -->
	 	 <uri>http://www.atmytag.com/jsp/jstl/core</uri>
  	
  	引入标签库
  		<%@taglib uri="定义标签库的uri" prefix="定义标签库的建议标签前缀"%>
 
 
 
  	public class SimpleTagSupport implements SimpleTag {
    
    public void doTag() throws JspException, IOException {}
      
    private JspTag parentTag;
    
    public void setParent( JspTag parent ) {
        this.parentTag = parent;
    }
    
    public JspTag getParent() {
        return this.parentTag;
    }

    private JspContext jspContext;
    public void setJspContext( JspContext pc ) {
        this.jspContext = pc;
    }

    
    protected JspContext getJspContext() {
        return this.jspContext;
    }

	private JspFragment jspBody;
	
    public void setJspBody( JspFragment jspBody ) {
        this.jspBody = jspBody;
    }

   
    protected JspFragment getJspBody() {
        return this.jspBody;
    }
  	
  	JspTag 
  		JspTag 是一个空接口    存在意义：用来统一 SimpleTag 和 Tag 的
  		
  		在 API 中 SimpleTag 接口继承 JspTag 接口 并提供 
  			doTag()		执行体结构函数     	
  			setParent(JspTag)/getParent()	设置父标签引用函数 
  			setJspContext(JspContext)	设置 PageContext
  			setJspBody(JspFragment)	设置标签体函数
  			
  		SimpleTagSupport 类 继承了 SimpleTag 接口
  			在 SimpleTagSupport 类 提供了 getxxx父类的所有setXxx方法
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	